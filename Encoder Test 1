package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.util.Range;

import static com.qualcomm.robotcore.hardware.DcMotor.RunMode.RUN_TO_POSITION;
import static com.qualcomm.robotcore.hardware.DcMotor.RunMode.STOP_AND_RESET_ENCODER;

@Autonomous(name="test", group="AutoDrive")

public class Test0 extends LinearOpMode {

    // Declare OpMode members.
    private ElapsedTime runtime = new ElapsedTime();
    DcMotor motor;

    @Override
    public void runOpMode() {
        telemetry.addData("Status", "Initialized");
        telemetry.update();

        motor = hardwareMap.dcMotor.get("motor");
        motor.setMode(DcMotor.RunMode.RUN_USING_ENCODER);

        waitForStart();
        motor.setTargetPosition(-(384*2));
        motor.setPower(.1);
        motor.setMode(RUN_TO_POSITION);
        int StoredValue = motor.getCurrentPosition();
        while (motor.isBusy()){
            int CurrentValue = motor.getCurrentPosition();
            if(StoredValue > CurrentValue){
                //increasing
            }
            else if(StoredValue < CurrentValue){
                //decreasing
            }
            StoredValue = CurrentValue;
            telemetry.addData("Position", motor.getCurrentPosition());
            telemetry.update();
        }
        motor.setPower(0);

        motor.setTargetPosition(10000);
        motor.setPower(.5);
        motor.setMode(RUN_TO_POSITION);
        while (motor.isBusy()){
            telemetry.addData("Position", motor.getCurrentPosition());
            telemetry.update();
        }
        motor.setPower(0);

        motor.setTargetPosition(-(0));
        motor.setPower(.1);
        motor.setMode(RUN_TO_POSITION);
        while (motor.isBusy()){
            telemetry.addData("Position", motor.getCurrentPosition());
            telemetry.update();
        }
        motor.setPower(0);

    }
}
